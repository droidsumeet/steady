matrix:
  include:
  - name: OpenJDK8 - Test and install Maven artifacts, Deploys Jib images
    language: java
    dist: trusty
    jdk: openjdk8
    cache:
      timeout: 1000
      directories:
      - "$HOME/.m2"
    before_cache:
    - rm -rf $HOME/.m2/repository/com/sap/research/security/vulas/
    install:
    - echo 'Skipping install stage, dependencies will be downloaded during build and
      test stages.'
    script: mvn -e -B -P gradle -Dspring.standalone -Dit.test='!IT01_PatchAnalyzerIT,
      IT*, *IT, *ITCase' -DfailIfNoTests=false --settings .travis/settings.xml clean
      install
    before_deploy:
    - set -a; source .travis/.env; set +a;
    - echo "VULAS_RELEASE=${VULAS_RELEASE}"
    - curl -Lo .travis/skaffold https://storage.googleapis.com/skaffold/releases/v0.40.0/skaffold-linux-amd64
    - chmod +x .travis/skaffold
    - export JIB=true
    - chmod +x .travis/package_steady_cli.sh
    - bash .travis/package_steady_cli.sh ${VULAS_RELEASE}
    deploy:
    - provider: releases
      api_key: "$GIT_TOKEN"
      file: "/tmp/cli/vulas-cli-${VULAS_RELEASE}.zip"
      skip_cleanup: true
      on:
        tags: true
        condition: "$TRAVIS_TAG =~ ^[0-9]+\\.[0-9]+\\.[0-9]+(\\..+)?$"

  - name: OpenJDK8 - Create Maven artifacts for JavaDoc and sources
    language: java
    jdk: openjdk8
    dist: trusty
    install:
    - echo 'Skipping install stage, dependencies will be downloaded during build and
      test stages.'
    script: mvn -e -B -P gradle,javadoc -Dspring.standalone -DskipTests --settings
      .travis/settings.xml clean package
  - name: Docker - Build the Modules' Jars, Run all Java tests, Create vital containers,
      Check if they stay alive for more than 20 seconds
    language: bash
    dist: trusty
    sudo: required
    services:
    - docker
    before_install:
    - docker -v
    - docker-compose -v
    - cp .travis/.env docker/.env
    install:
    - docker build --tag vulnerability-assessment-tool-generator -f docker/Dockerfile
      --build-arg http_proxy= --build-arg https_proxy= .
    - docker run -it --rm -v ${PWD}/docker:/exporter -v ${PWD}/.travis/settings.xml:/settings.xml
      --env-file ./docker/.env -e mvn_flags='-q -P gradle -Dit.test=!IT01_PatchAnalyzerIT,IT*,*IT,*ITCase
      -DfailIfNoTests=false --settings /settings.xml' vulnerability-assessment-tool-generator
    script:
    - "(cd docker && docker-compose -f docker-compose.yml -f docker-compose.build.yml
      up -d --build)"
    - sh .travis/check.sh
    after_failure:
    - docker images
    - docker ps -as
    - "(cd docker && docker-compose logs)"
    before_deploy:
    - set -a; source docker/.env; set +a;
    - echo "VULAS_RELEASE=${VULAS_RELEASE}"
    deploy:
    - provider: script
      skip_cleanup: true
      script: bash .travis/docker_hub_push_snapshot.sh
      on:
        branch: master
        condition: "$TRAVIS_EVENT_TYPE = push"
    - provider: script
      skip_cleanup: true
      script: bash .travis/docker_hub_push_release.sh
      on:
        tags: true
        condition: "$TRAVIS_TAG =~ ^[0-9]+\\.[0-9]+\\.[0-9]+(\\..+)?$"
  - name: Docker - Check if Dockerfile sources are present at fixed location (ECCN
      req)
    language: bash
    script:
    - bash .travis/check_dockerfile_location.sh
  - name: Docs - Build and check the docs for dead links
    language: bash
    sudo: required
    services:
    - docker
    before_install:
    - docker -v
    - docker-compose -v
    install:
    - docker build --tag docs ./docs
    - docker network create docs
    script:
    - docker run --rm --network=docs -d --name docs --hostname docs -p 8000:8000 docs
    - sleep 10
    - docker run --entrypoint=/tmp/checklinks.sh -e URL=docs:8000 -v ${PWD}/docs/:/tmp/
      --rm --network=docs --name checklinks raviqqe/muffet:1.3.1
    before_deploy:
    - git remote set-url origin https://"$GIT_USER":"$GIT_TOKEN"@github.com/eclipse/steady.git
    - git config --local user.email "$GIT_MAIL"
    deploy:
    - provider: script
      skip_cleanup: true
      script: cd docs && pip install -r requirements.txt && sed -i.bak '/dev_addr/d'
        mkdocs.yml && python docs.py public --mkghdeploy
      on:
        tags: true
        condition: "$TRAVIS_TAG =~ ^[0-9]+\\.[0-9]+\\.[0-9]+(\\..+)?$"
    after_failure:
    - docker images
    - docker ps -as
    - docker logs docs
notifications:
  email: false
env:
  global:
  - secure: HMXBWqla0X48/I2kS3Wv20XHT/j7l95kdxBMJAvzwXh2jqa5OxnkUjMC1DNVc9INh1qZVFzKLAscbhD1jfLH1G6nEFYelIJfZ3GHRtAP80VMABhZ+qi6d3QQp+Q/4jzPPNyRYeeXT5hZc8ej2atjDCizk0+oiXFogKuTh7Prb3EkyVmXTzsViqJ6VGMmxgyCTKD6aKlPJaIk0nrY3jCqDAwRDrbpWEIzzS+caE+7md7pIVspnBrd1EyD7+PBYKvLByO8ENUucwS3rUtmd//+1erkUjF0xqL0TWmur6bwvh7hijfhFcIpHVV2F2TC3E3DJDtAGFMmJCr7oQbab4NqbphXRPXkkBXqiU4OCH6F4RsYdUYoAq9mk4ymVPeu+lFY7qmqChqGPqaLTolVOL8srrQJB0K8p9bWK8PEANQsLvxdWrv0nWJreiH1F8Ux/tPBjAzd4Uw4CbN/n1cdgOHT0qfost+lJkPcoPO42AgpXoDzfO/QlQbbWkFQkYDFmU1pSZ/uw8C8CzveqpOs7M97+h1w28cFrsQFvpBh5LdpaELo+hLOw/EmwQ38a8OvjcDw0M++kfqfp0KipYaNjC45clanAbIxwHyZL/SgEmJuq8TueF3g1DfW7zrd1mKJrmcM+CN71qBuYVwn5oRg4JG1TJDjeVm691rkmosSG7cj8tM=
  - secure: L2qRxeyuyoQWE14pmhLkkxCUDPYdF/l9Wl+UBnTJaJwKWpwx+7Onw+R8oYZD+ddWJPx5AjTA4WlKbhbSLoS5uidCzTBLNWN0a8KT7J5LTR6zPT5GlKqHnb/JASU6UHMi5i3btUGFlk/bhhj7bx1RVrVKg31xU5dsETseNpFCvTUmurn0G6TfR2H0haPjL4kM/wy0WvnnJQPJmnaIsohrnJ9o7S9CTsNXp2pJcJ+tiWUy7DSGTzsUI9QLsEx9fjWwWSjpW2RxK2K5jvXt+2oirUYJQeE1cXXqzi0LjhPCdAiIqCFUAUbs8zypkRQmborPegQzkFalFKRo0XPxk03aP0N8Z/uAj0qCNun+sbWLjGZx5hKL6gCdhd2gbLvuUuRubTeYx9v52U1XqGAKOAKIKH/gDk8NOUNh+qGUL89I4A0y6zQz9PTt/Uvve1ZvMhqQM3absfusUyTYpgenFa8V0Ia0HRqabIzKlH13SjFh+2Diz1Zl7151/bJ25NPzQB83Yhe+IGbmV4741rNtKIpiuX3NHOQL6/g1PBG0rM5f9SwtUpaOFGKcLNiXsdfsrrfspyH53/ETkS+NqyJiWf88y6aS+eE0SMhENNfhRf7joweuLC8+/AWKRnUwirUautWy71QDgYRTWXbCIvJNBrZKNGnyq2RZxf/mpaC82aL4DFY=
  - secure: r7DZp4oVMMGfgiR8ac5au+pxNY9+zSV1GBTXzmnX+lYUEDm03UPZyt9ZDngJ0R/zni4U+N+oug4EJCN8+xj13QoJYXg9To8IBBSlz4GYQWyj6gtRrEWDhnwfBSgw6GbXIdE1Ovd50YH0f4YVmhlYCqABSp7mlyjBLjA+WaWdeZf+0ljnMC0CvOe2TLtwjQV4vZr9Ub8qaGF+GFzFTWZsfOMTF7v22dLZ7RhB51fBE/ZqijimOniIBKw4hG1o1By0e/7qnyZWxH5oMgkYyvVbLjTET1id7rHNiHZtjlZcUP9Pt84+wpsw3qnmz3IuG1ICHC1xvShNok794bjbarClXJeM+dMryGsfNsr4x67eQf7PP7e/WnP68P/fVKXT7o/CC+mGnnystb0KBe/tC1fULC67NUO0k8Ki2KhbXtKFj+lOZop+KRIpTJcLg8EBbNdT36TbS159x2Y1qce/uE3qyJnzIc38f4mT+LWib5NatqZv8adb5LZQgarjwz2m7ViwjP4q0t2SLsgUA+BJNBPo2r2A+Aa7u38ij0MAvvINIEk8udgopkje8NaEsfSPrZvHfMTDCoaJRfJgf4m8ETvIp6INzIOrL/bxyeD8Z73mtaEB88Xv2UuTGsZs8B/mCtx7BRz8ltcYmpbnCKHSWa7mUIs2RdkxsgiD2OmlW/uU5Ik=
